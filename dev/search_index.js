var documenterSearchIndex = {"docs":
[{"location":"index.html#StochasticAD","page":"Introduction","title":"StochasticAD","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"StochasticAD is an experimental, research package for automatic differentiation (AD) of stochastic programs. It implements AD algorithms for handling functions which are discrete and random, based on the methodology developed in [TODO].","category":"page"},{"location":"index.html#Preview","page":"Introduction","title":"Preview","text":"","category":"section"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Derivatives are all about how functions are affected by tiny changes in their input. To understand the effect of a tiny change, instead of providing a standard real number to a function, we can provide an object called a stochastic triple. First, let's consider a deterministic function.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"using StochasticAD\nf(p) = p^2\nstochastic_triple(f, 2) # Feeds 2 + Œµ into f","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The output tells us that if we change the input 2 by a tiny amount Œµ, the output of f will change by around 4Œµ. This is the case we're familiar with. But what happens with a discrete random function? Let's give it a try. ","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"import Random # hide\nRandom.seed!(4321) # hide\nusing StochasticAD, Distributions\nf(p) = rand(Bernoulli(p)) # 1 with probability p, 0 otherwise\nstochastic_triple(f, 0.5) # Feeds 0.5 + Œµ into f","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"The output of a Bernoulli variable cannot change by a tiny amount: it is either 0 or 1. But in the probabilistic world, there is another way to change by a tiny amount on average: jump by a large amount, with tiny probability. The purpose of the third component of the stochastic triple is to describe these perturbations. Here, the stochastic triple says that the original random output was 0, but given a small change Œµ in the input, the output will jump up to 1 with probability around 2Œµ.","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"Stochastic triples can be used to construct a new random program whose average is the derivative of the average of the original program. Let's try a crazier example, where we mix discrete and continuous randomness!","category":"page"},{"location":"index.html","page":"Introduction","title":"Introduction","text":"using StochasticAD, Distributions\nimport Random # hide\nRandom.seed!(1234) # hide\n\nfunction X(p)\n    a = p^2 \n    b = rand(Binomial(10, p))\n    c = 2 * b + 3 * rand(Bernoulli(p))\n    return a * c * rand(Normal(b, a))\nend\n\nst = @show stochastic_triple(X, 0.6) # sample a single stochastic triple at p = 0.6\n@show derivative_contribution(st) # which produces a single derivative estimate...\n\nsamples = [derivative_estimate(X, 0.6) for i in 1:1000] # many samples from derivative program\nderivative = mean(samples)\nuncertainty = std(samples) / sqrt(1000)\nprintln(\"derivative of ùîº[X(p)] = $derivative ¬± $uncertainty\")","category":"page"}]
}
